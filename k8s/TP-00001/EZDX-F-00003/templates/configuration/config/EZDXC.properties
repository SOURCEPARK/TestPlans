#This file is the main configuration file for the EZDXC Service

# Version and build number of the service that uses this configuration file.
# This setting will be set after the application hast started.
Version=N\/A

# This is the configuration file for the EZDXC service. Change this setting
#     only if you what this means.
ServiceIdentity=EZDXC

# The ip number or hostname the EZDXC will bind the listener for incoming
#    connections to. You can use localhost here.
InputLayerServer=0.0.0.0

# The port number the EZDXC will bind the listener for incoming
#    connections to. Default for all EZDXC services instances is
#    the port number 9401.
# Be aware that changing this can lead to collisions.
InputLayerPort=9421

# Maximum time in milliseconds the EZDXC waits for data on the specified port
#    and hostname or address.
InputLayerTimeout=20000

# The ip number or hostname of the SMD node that controls this service.
ManagingNode=synaptic-node16-service.${env:SYNAPTIC_INSTANCE}.svc.cluster.local

# The port number where the managing node is listening to. Default for
#    this setting is: 9201
ManagingNodePort=9201

# The configuration file for the logging system. Default for this
#    this setting is: /etc/smd/log4j.properties
LogConfigurationFile=${env:SYNAPTIC_BASEPATH}/log4j-ezdxc.properties

# The main path where all the queues of the EZDXC subsystem will be created
QueuePath=${env:SYNAPTIC_LIBPATH}/ezdxc/queues

# The directory in which the EzDex-CLI-Client stores incomplete uploaded and
# downloaded files.
# Must not be a temporary directory and be writable for the client.
WorkingDirectory=${env:SYNAPTIC_LIBPATH}/ezdxc/workspace

# The directory in which the EzDex-CLI-Client stores completed downloads.
# Must be writable for the client.
DownloadDirectory=${env:SYNAPTIC_LIBPATH}/ezdxc/spool/downloads

#The adress of the EzDex server service
EzDexServerNode=<NOT_SET>:EZDXS

# Please enter the fully qualified server name/ip address and username/password
# if required
# Example value: http://USERNAME:PASSWORD@PROXYIP:PROXYPORT
#ProxyUrl=

# Maximal amount of working threads for up- and downloads
# Default for this setting is: 32
#WorkerPoolSize=

# Maximal amount of retries for failed up- and downloads
# Default for this setting is: 5
#MaxRetriesUpAndDownloads=

# The interval in seconds that the client waits before it cancels launching for
# responses from other systems.
# Default for this setting is: 300 Sec
#ResponseTimeout=

# The interval in seconds that the client waits before it starts next retry.
# Default for this setting is: 600 Sec
#RetryTimeout=

# Random retry interval between "RetryTimeout - RandomRetryTimeoutBound" and
# "RetryTimeout + RandomRetryTimeoutBound" will be used.
# If "RandomRetryTimeoutBound" is equal to zero no random timeouts will be used.
# Default for this setting is: 300 Sec
#RandomRetryTimeoutBound=

# Default for this setting is: true
#AutoResumeUpAndDownloads=

# Possible values: RENAMENEW, OVERWRITE, MOVEOLD
# Default for this setting is: RENAMENEW
#DuplicateFileHandlingMode=

# Wether or not file deletion events should be propagated to target system
# and should be accepted by this instance.
# Default for this setting is: false
#DeleteFileMode=

# Path to synaptic service that should be notificated if a new file is downloaded.
#FinishedDownloadNotificationTarget=

# Mapping from file path to target node
RegexNodeMappingFile=${env:SYNAPTIC_BASEPATH}/config/EZDXC_TRANSFERMAP.properties


# To define a list of post actions use this setting. You can as many entries as needed.
# the format is: <NODE ID>;<REGEX FOR FILENAME>;<ACTION>;<OPTIONAL TARGET PATH>
# REGEX FOR NODE ID is a regular expression that matches the identity of the node the file will was sent to.
# REGEX FOR FILENAME is a regular expression for the filename sent. If the expression
#      matches the action will be triggered.
# ACTION this setting describes the action to take when the rule matches. Valid actions are
#      KEEP: Do nothing (default behaviuor)
#      MOVE: Move the file to the target path. If no path is set the file will be deleted.
#      DELETE: Delete the file after succesfill upload.
#
# Example: Upload.PostAction=OEM.TEST.*;.*;DELETE
#          Upload.PostAction=OEM.TEST.*;.*;MOVE;/tmp

Upload.PostAction=.*;.*;DELETE

# Defines if file with length of zero bytes should be ignores. Defaults to true
Upload.IgnoreZeroLengthFiles=True


#This file is the main configuration file for the HASHFS Service
#Thu Jan 19 10:54:56 CET 2012

# Version and build number of the service that uses this configuration file.
# This setting will be set after the application hast started.
Version=1.6.6-SNAPSHOT-B1579193304842

# This is the configuration file f√ºr the HASHFS service. Change this setting
#     only if you what this means.
ServiceIdentity=HASHFS

# The ip number or hostname the HASHFS will bind the listener for incoming
#    connections to. You can use localhost here.
InputLayerServer=0.0.0.0

# The port number the HASHFS will bind the listener for incoming
#    connections to. Default for all HASHFS services instances is
#    the port number 9401. 
# Be aware that changing this can lead to collisions.
InputLayerPort=9405

# Maximum time in milliseconds the HASHFS waits for data on the specified port 
#    and hostname or address.
InputLayerTimeout=20000

# The ip number or hostname of the SMD node that controls this service.
ManagingNode=synaptic-node16-service.${env:SYNAPTIC_INSTANCE}.svc.cluster.local

# The port number where the managing node is listening to. Default for 
#    this setting is: 9201
ManagingNodePort=9201

# The configuration file for the logging system. Default for this 
#    this etting is: /etc/smd/log4j.properties
LogConfigurationFile=${env:SYNAPTIC_BASEPATH}/log4j-hashfs.properties

# The main path where all the queues of the EXAMPLE subsystem will be created
QueuePath=${env:SYNAPTIC_LIBPATH}/hashfs/queues

# Filename of the mapdb storage file.
MapDbFile=${env:SYNAPTIC_LIBPATH}/hashfs/filedb

# Path to monitor with all sub folders and service identity to send a message 
#     to if something has changed. Add more entries to add different pathes. 
#     Add a strip path after the monitoring path. If the strip path is empty
#     the monitoring path will be used as strippath.
#     The service identity that will be notified about changes must be added 
#     after a semikolon terminating the atrip path name.
#     A special notation for the service identity is possible. Adding only :FSS
#     as service identity will be expanded to <local node identity>:FSS
#     If data should not be persisted like in encryption environments a NOT_PERSIST
#     Flag must be added.
#     
MonitoringPath=${env:SYNAPTIC_LIBPATH}/storage;;:FSS
MonitoringPath=${env:SYNAPTIC_LIBPATH}/fss/incoming;;:FSS;NOT_PERSIST

# Files to skip
SkipFiles=REPLACE_ME
SkipFiles=.*/.DAV/.*

# The hostname where the REST API is bound to
HttpHost=0.0.0.0

# Port of the REST service.
HttpPort=9402

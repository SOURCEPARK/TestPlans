#This file is the main configuration file for the File Synchronization System
#Thu Jan 19 10:54:56 CET 2012

# Version and build number of the service that uses this configuration file
Version=1.6.5-B1579187262728

# The path where all files will copied after FSS has checked that they were
#    successfully received. FSS expects a folder named certs containing a
#    PKCS#12 and a truststore.pem for client authentication.
# Be aware that the URL path will be added to the base path.
BasePath=${env:SYNAPTIC_LIBPATH}/storage

# This is the default archive path. When a file is deleted it is moved to archive.
#    When a file with the same Hash is rewuested for download it will be recovered
#    from the archive.
#    Caution: Keep in mind that over time this folder needs a lot of diskspace.
ArchiveRootPath=${env:SYNAPTIC_LIBPATH}/archive

# To access a mutual SSL webserver for downloading files the FSS needs an
#    authentification. FSS uses a PKCS#12 formatted file that stores 
#    the public and privet key in one file.
#    The path to the file is relative to the base path and includes the filename.
#    Example: certs/fss.p12
#P12KeyFile=<relative path from base path to key/cert file in pkcs#12 format>

# The passphrease must be definied here if the P12KeyFile is 
#    protected by a passphrase.
#P12PassPhrase=<passphrase to access P12key>

# The truststore is in PEM Format and conatains all certs the FSS should trust.
#    A server presenting a certificate that is not listed here is untrusted and
#    no download will take place.
#Truststore=<relative path from base path to cert chain file in pem format>

# TruststoreHandling can be set to three different truststore handling modes.
#    Theese modes are TRUST_ALL, TRUST_DEFAULT_TRUSTSTORE and 
#    TRUST_EXTERNAL_TRUSTSTORE
TruststoreHandling=TRUST_DEFAULT_TRUSTSTORE

# Path to strip of the absolut path from the filename on this leaf..
#    The stripping depends on the setup and protocol that wiil be used
#    to download the files from this leaf. If the pathes are
#    fully disjunct the complete path will be stripped.
#    If this property is empty or does not match with the path received a 
#    warning will be written to the log and the whole path will be left as is.
StripPath=${env:SYNAPTIC_LIBPATH}/storage

# This property sets the filename of the MD5FS digest file. This file
#    will be used to detect differences between the parent and this leaf.
#    Tools like md5fs can calculate such a file in realtime.
MD5FSUrl=http://synaptic-fss16-service.${env:SYNAPTIC_INSTANCE}.svc.cluster.local:${env:SYNAPTIC_HASHFS16_SERVICE_SERVICE_PORT_HTTP}/files/

# Comma separted list of regex patterns of files that will be ignored 
#    during processing. Be aware that all files that matches one of the 
#    expressions in this list will be lost for distribution.
SkipExpression=.*/.DAV/.*

# Comma separated list of regex patterns of files which will be transferred
#    with EXPRESS context set and a prio of 10. 
ExpressTransferExpressions=

# Filename of the file that contains all nodes that does not decrypt 
#    file content.
TransitNodeFile=/etc/smd/${env:SYNAPTIC_INSTANCE}/config/FSSTRANSITNODES.lst

# The Synaptic File Synchronization System has two different operating modes.
#    The default mode is the cascading mode. This means that every time
#    a file is downloaded other nodes will get a message with a download
#    URL where the informed node can download the file.
#    To disable cascading set the property EnableCascading to False.
EnableCascading=False

# Comma Separated list of regex patterns of files which will be transferred
#    only "down the hierarchy". All files will be relayed to sub nodes but not
#    synced with the parent node.
InjectionExpressions=

# This is the configuration file f√ºr the FSS service. Change this setting
#     only if you what this means.
ServiceIdentity=FSS

# The Download URL is the URL the leaf will concantenate the rest of the strip
#    operation to. The resulting concatenated string will be send as download 
#    URL to the client.
#    More than one URL can be provided by using a comma separated list of URLs.
#    The URLs will be processed in the order tehy were given. When a download
#    from an URL fails the next URL in the list will be tried.
#    This setting must contain one or more valid URL if EnableCascading is set to 
#    True or to N/A if this is a non cascading node.
DownloadURL=<Place the URL where sub nodes can download files from this node here>

# The Download proxy can be used if the connection to the server must be routed
#    through a proxy server.
DownloadProxyURL=

# Delay in seconds between download retries. If a download fails with a non
#    permanent error code the FSS will try after the RetryDelayPeriod to download the
#    same file again. 
#    The message will not expire will caught in this process.
#    Default Period is 24h.
RetryDelayPeriod=8640

# ExpressRetryDelayPeriod is the delay in seconds that will be used for all files
#     that were delivered with EXPRESS context set.
#     Default is 5 min.
ExpressRetryDelayPeriod=300

# Maximum retries FSS should make to download a file. After all retries are done
#     the file is marked as failed an APGS will be informed.
#     Set MaxDownloadRetrie to zero to prevent retrying.
MaxDownloadRetries=5

# The target identifier is a target or target group id where all messages
#    concerning downloading files will be redirected.
#    If a service id is omitted the target will be interpreted 
#    as group identifier.
Target=ROOT.FSSCONSUMER

# The ip number or hostname the FSS will bind the listener for incoming
#    connections to. You can use localhost here.
InputLayerServer=0.0.0.0

# The port number the FSS will bind the listener for incoming
#    connections to. Default for all FSS services instances is
#    the port number 9401. 
# Be aware that changing this can lead to collisions.
InputLayerPort=9401

# Maximum time in milliseconds the FSS waits for data on the specified port 
#    and hostname or address.
InputLayerTimeout=200

# Maximum wait time fo a locked file to wait for unlocking. This time should 
#    correlate with the average maximum download time
MaxUnlockWaitTime=300000

# Check file lock time intervall. Should be set to a MaxUnlockWaitTime/100.
CheckLockIntervall=3000

# The ip number or hostname of the SMD node that controls this service.
ManagingNode=synaptic-node16-service.${env:SYNAPTIC_INSTANCE}.svc.cluster.local

# The port number where the managing node is listening to. Default for 
#    this setting is: 9201
ManagingNodePort=9201

# The configuration file for the logging system. Default for this 
#    this etting is: /etc/smd/log4j.properties
LogConfigurationFile=${env:SYNAPTIC_BASEPATH}/log4j-fss.properties

# The main path where all the queues of the FSS subsystem will be created
QueuePath=${env:SYNAPTIC_LIBPATH}/fss/queues

# The folder where all downloaded files will be stored before they are 
#   moved to the target folder.
DownloadPath=${env:SYNAPTIC_LIBPATH}/downloads

# The max count of download threads running to download files from the 
#    parent server. Default is 1
#
# Be aware that setting this max count to an uncommon value (>10) can
#    make your network unusable.
MaxDownloadThreads=1

# The max count of dispatcher threads running to dispatch incoming messages
#    files from the parent server. Default is 1
#
# Be aware that MaxDispatcherThread*MaxDowonloadThreads can be created.
MaxDispatcherThreads=1

# The MaxLifeTime sets the maximum life time of a SCP message. All
#    messages with expired max life time will be trashed.
#    MaxLifeTime is configured in minutes.
#    Default is 7200 which means 5 days.
MaxLifeTime=7200

# URL where the REST API should be bound. Keep in mind that using the hostname
#    will implicitly bind to localhost when /etc/hosts ist not changed.
RestApiUrl=http://synaptic-FSS16-service.${env:SYNAPTIC_INSTANCE}.svc.cluster.local:9411/fss

# Set this value to enabled to activate storage encryption for files. Keep in 
#    mind that encrypted files are only valid for FSS to FSS use. If this node
#    feeds a postprocessing or file share the setting should be set to disabled.
StorageEncryption=False

# Folder where the temporary keys are stored after download. Theese key are 
#    needed for storage encryption.
StorageEncryptionKeyFolder=${env:SYNAPTIC_LIBPATH}/fss/keys

# Folder where downloads will be stored until the specific decryption key has 
#     arrived.
EncryptionTemporaryFolder=${env:SYNAPTIC_LIBPATH}/fss/temp

# Key size for AES encryption. Check the crypto law for the countries you  want
#     to serve with encrypted data. And use the smalles key allowed for all
#     countries.
#     Valid now is 128, 256
AESKeySize=128

# Incoming folder. To add files to the storage file must be copied to this folder.
#     FSS will copy the files from this location to the basepath and will use the
#     same path structure as found in the incoming folder.
IncomingFolder=${env:SYNAPTIC_LIBPATH}/fss/incoming
